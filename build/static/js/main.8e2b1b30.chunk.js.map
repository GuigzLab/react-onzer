{"version":3,"sources":["logo.svg","components/Track.jsx","FavService.js","state.js","components/Home.jsx","components/Favorites.jsx","components/NotFound.jsx","components/Song.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","Track","props","music","isFavorite","favBtnClass","className","style","flex","width","margin","src","album","cover","artist","picture","alt","title_short","name","title","preview","controls","href","onClick","event","preventDefault","onFavClick","to","id","getFavoritesFromStorage","JSON","parse","window","localStorage","getItem","Boolean","this","find","f","toggleFavorite","removeFavoriteFromStorage","addFavoriteToStorage","favorites","push","setItem","stringify","musicIndex","findIndex","splice","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","Home","useContext","store","dispatch","inputTitle","createRef","selectOrder","onFavorites","FavService","type","newMusics","musics","useEffect","current","onSubmit","encodedTitle","encodeURIComponent","trim","length","fetchJsonp","order","then","response","json","data","catch","ex","console","log","htmlFor","ref","placeholder","onChange","newTitle","target","newOrder","defaultValue","map","key","Favorites","useState","setMusics","NotFound","Song","useParams","Number","isNaN","location","App","state","action","logo","path","exact","render","component","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"oGAAAA,EAAOC,QAAU,IAA0B,kC,0OC0C5BC,MAtCf,SAAeC,GASV,IAAMC,EAAQD,EAAMC,MACdC,EAAaF,EAAME,WACnBC,EAAcD,EAAa,qBAAuB,aAExD,OACK,yBAAKE,UAAU,2BAA2BC,MAAO,CAAEC,KAAM,UAAWC,MAAO,MAAOC,OAAQ,OACrF,yBAAKJ,UAAU,uBACV,yBAAKA,UAAU,cACV,yBAAKA,UAAU,sCAAsCK,IAA4B,KAAtBR,EAAMS,MAAMC,MAAgBV,EAAMS,MAAMC,MAAQV,EAAMW,OAAOC,QAASC,IAAI,KACrI,yBAAKV,UAAU,cACV,wBAAIA,UAAU,cAAcH,EAAMc,aAClC,wBAAIX,UAAU,iCAAiCH,EAAMW,OAAOI,KAA5D,MAAqEf,EAAMS,MAAMO,SAG3F,2BAAOR,IAAKR,EAAMiB,QAASd,UAAU,aAAae,UAAQ,IAAS,6BACnE,uBAAGC,KAAK,IAAIC,QAtB3B,SAAoBpB,GACf,OAAO,SAACqB,GACHA,EAAMC,iBACNvB,EAAMqB,QAAQpB,IAmBYuB,CAAWvB,GAAQG,UAAW,8BAAgCD,GAC7ED,EACM,oCAAE,uBAAGE,UAAU,wBAAf,wBACA,oCAAE,uBAAGA,UAAU,iBAAf,yBAGZ,kBAAC,IAAD,CAAMqB,GAAE,sBAAiBxB,EAAMyB,IAAMtB,UAAU,oBAC1C,uBAAGA,UAAU,iCCjCvB,GAEVuB,wBAFU,WAGL,OAAOC,KAAKC,MAAMC,OAAOC,aAAaC,QALnB,qBAKqD,IAK7E9B,WARU,SAQCD,GACN,OAAOgC,QAAQC,KAAKP,0BAA0BQ,MAAK,SAAAC,GAAC,OAAIA,EAAEV,KAAOzB,EAAMyB,QAK5EW,eAdU,SAcKpC,GACNiC,KAAKhC,WAAWD,GACfiC,KAAKI,0BAA0BrC,GAE/BiC,KAAKK,qBAAqBtC,IAMpCsC,qBAxBU,SAwBWtC,GAChB,IAAMuC,EAAYN,KAAKP,0BACvBa,EAAUC,KAAKxC,GACf6B,OAAOC,aAAaW,QA7BD,kBA6B+Bd,KAAKe,UAAUH,KAKtEF,0BAhCU,SAgCgBrC,GACrB,IAAMuC,EAAYN,KAAKP,0BACjBiB,EAAaJ,EAAUK,WAAU,SAAAT,GAAC,OAAIA,EAAEV,KAAOzB,EAAMyB,MAC3Dc,EAAUM,OAAOF,EAAY,GAC7Bd,OAAOC,aAAaW,QAtCD,kBAsC+Bd,KAAKe,UAAUH,MCrC9DO,EAAeC,0BACfC,EAAgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,aAAcC,EAA1B,EAA0BA,SAA1B,OACxB,kBAACL,EAAaM,SAAd,CAAuBC,MAAOC,qBAAWL,EAASC,IAC5CC,IC4FII,MAzFf,SAAcxD,GAAQ,IAAD,EDAcyD,qBAAWV,GCAzB,mBAETW,EAFS,KAEFC,EAFE,KAOVC,EAAaC,sBACbC,EAAcD,sBAkCpB,SAASE,EAAY9D,GAChB+D,EAAW3B,eAAepC,GAC1B0D,EAAS,CACJM,KAAM,WACNC,UAAU,YAAKR,EAAMS,UAK/B,OAzCAC,qBAAU,WACLR,EAAWS,QAAQf,MAAQI,EAAMzC,SAyCjC,0BAAMb,UAAU,kBACX,yCACA,kGACA,6BACA,0BAAMkE,SA1BhB,SAAkBhD,GACbA,EAAMC,iBACN,IAAMgD,EAAeC,mBAAmBd,EAAMzC,OAC1CyC,EAAMzC,MAAMwD,OAAOC,OAAS,GAC3BC,IAAW,mCAAD,OAAoCJ,EAApC,kBAA0Db,EAAMkB,MAAhE,kBACJC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAAC,GAAQ,OAAIA,EAASE,QAC1BH,MAAK,SAAAV,GAAM,OAAIR,EAAS,CAAEM,KAAM,WAAYC,UAAWC,OACvDc,OAAM,SAACC,GAAD,OAAQC,QAAQC,IAAI,iBAAkBF,QAmB7C,yBAAK9E,UAAU,OACV,2BAAOiF,QAAQ,aAAajF,UAAU,sCAAtC,cACA,yBAAKA,UAAU,YACV,2BAAO6D,KAAK,OAAO7D,UAAU,eAAesB,GAAG,aAAa4D,IAAK1B,EAC5D2B,YAAY,yCAAyCC,SA9CnF,SAAkBlE,GAEbqC,EAAS,CACJM,KAAM,UACNwB,SAAUnE,EAAMoE,OAAOpC,YA4Cb,2BAAO+B,QAAQ,aAAajF,UAAU,sCAAtC,eACA,yBAAKA,UAAU,YACV,4BAAQsB,GAAG,QAAQtB,UAAU,gBAAgBoF,SA1CtE,SAAkBlE,GACbqC,EAAS,CACJM,KAAM,UACN0B,SAAUrE,EAAMoE,OAAOpC,SAuCyDgC,IAAKxB,EAAa8B,aAAa,WAC3F,4BAAQtC,MAAM,aAAd,SACA,4BAAQA,MAAM,cAAd,WACA,4BAAQA,MAAM,aAAd,WACA,4BAAQA,MAAM,WAAd,uBACA,4BAAQA,MAAM,cAAd,wBAGV,yBAAKlD,UAAU,uBACV,2BAAO6D,KAAK,SAAS7D,UAAU,kBAAkBkD,MAAM,UAItE,6BAEA,4CACA,yBAAKlD,UAAU,6BACTsD,EAAMS,OAAO0B,KAAI,SAAA5F,GAAK,OAAI,kBAAC,EAAD,CAAO6F,IAAK7F,EAAMyB,GAAIzB,MAAOA,EAAOoB,QAAS0C,EAAa7D,WAAY8D,EAAW9D,WAAWD,WCtD5H8F,MA/Bf,SAAmB/F,GAAQ,IAAD,EAEOgG,mBAAShC,EAAWrC,2BAF3B,mBAEdwC,EAFc,KAEN8B,EAFM,KAIrB,SAASlC,EAAY9D,GAChB+D,EAAW3B,eAAepC,GAC1BgG,EAAUjC,EAAWrC,2BAI1B,OACK,0BAAMvB,UAAU,kBACX,2CACA,0DACA,6BAEA,yBAAKA,UAAU,6BACT+D,EAAO0B,KAAI,SAAA5F,GAAK,OACZ,kBAAC,EAAD,CACK6F,IAAK7F,EAAMyB,GACXzB,MAAOA,EACPoB,QAAS0C,EACT7D,WAAY8D,EAAW9D,WAAWD,WChBjDiG,MARf,SAAkBlG,GACb,OACK,yBAAKI,UAAU,aACV,wBAAIA,UAAU,QAAd,mB,OCiBA+F,MAnBf,SAAcnG,GAAQ,IAEX0B,EAAO0E,YAAUC,UAAjB3E,GAEN,IAAI4E,MAAM5E,GAIL,OACK,0BAAMtB,UAAU,kBACX,6BACMsB,IANhBI,OAAOyE,SAASnF,KAAO,UCsElBoF,MApEf,WA+BE,OACE,kBAAC,EAAD,CAAerD,aA9BI,CACnBlC,MAAO,GACP2D,MAAO,GACPT,OAAQ,IA2BmCjB,QAxB7B,SAACuD,EAAOC,GACtB,OAAQA,EAAOzC,MACb,IAAK,UACH,OAAO,eACFwC,EADL,CAEExF,MAAOyF,EAAOjB,WAElB,IAAK,UACH,OAAO,eACFgB,EADL,CAEE7B,MAAO8B,EAAOf,WAElB,IAAK,WACH,OAAO,eACFc,EADL,CAEEtC,OAAQuC,EAAOxC,YAGnB,QACE,OAAOuC,KAMT,kBAAC,IAAD,KACE,yBAAKrG,UAAU,0DACb,yBAAKA,UAAU,aACb,kBAAC,IAAD,CAAMqB,GAAG,SAASrB,UAAU,wBAC1B,yBAAKK,IAAKkG,IAAM7F,IAAI,aAAaP,MAAM,OADzC,UAGA,yBAAKH,UAAU,2BAA2BsB,GAAG,aAC3C,wBAAItB,UAAU,cACZ,wBAAIA,UAAU,mBACZ,kBAAC,IAAD,CAAMqB,GAAG,SAASrB,UAAU,YAC1B,uBAAGA,UAAU,kBADf,yBAIF,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAMqB,GAAG,mBAAmBrB,UAAU,YACpC,uBAAGA,UAAU,qBADf,qBAQV,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEwG,KAAK,SAASC,OAAK,EAACC,OAAQ,kBAAM,kBAAC,EAAD,SAEpC,kBAAC,IAAD,CAAOF,KAAK,mBAAmBG,UAAWhB,IAC1C,kBAAC,IAAD,CAAOa,KAAK,kBAAkBG,UAAWZ,IACzC,kBAAC,IAAD,CAAOY,UAAWb,QC3DRjE,QACW,cAA7BH,OAAOyE,SAASS,UAEe,UAA7BlF,OAAOyE,SAASS,UAEhBlF,OAAOyE,SAASS,SAASC,MACvB,2DCZNC,IAASJ,OAAO,kBAAC,EAAD,MAASK,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB1C,MAAK,SAAA2C,GACJA,EAAaC,gBAEdxC,OAAM,SAAAyC,GACLvC,QAAQuC,MAAMA,EAAMC,c","file":"static/js/main.8e2b1b30.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\r\n\r\n\r\nfunction Track(props) {\r\n\r\n     function onFavClick(music) {\r\n          return (event) => {\r\n               event.preventDefault();\r\n               props.onClick(music);\r\n          }\r\n     }\r\n\r\n     const music = props.music;\r\n     const isFavorite = props.isFavorite;\r\n     const favBtnClass = isFavorite ? 'btn-outline-danger' : 'btn-danger';\r\n\r\n     return (\r\n          <div className=\"card border-0 shadow p-3\" style={{ flex: 'initial', width: '45%', margin: '2%' }}>\r\n               <div className=\"card-body text-left\">\r\n                    <div className=\"media mb-2\">\r\n                         <img className=\"align-self-center mr-2 w-25 rounded\" src={(music.album.cover !== \"\") ? music.album.cover : music.artist.picture} alt=\"\" />\r\n                         <div className=\"media-body\">\r\n                              <h5 className=\"card-title\">{music.title_short}</h5>\r\n                              <h6 className=\"card-subtitle mb-2 text-muted\">{music.artist.name} / {music.album.title}</h6>\r\n                         </div>\r\n                    </div>\r\n                    <audio src={music.preview} className=\"w-100 my-2\" controls></audio><br />\r\n                    <a href=\"#\" onClick={onFavClick(music)} className={'btn btn-sm btn-danger mt-2 ' + favBtnClass}>\r\n                         {isFavorite\r\n                              ? <><i className=\"fas fa-heart-broken\"></i> Retirer des favoris</>\r\n                              : <><i className=\"fas fa-heart\"></i> Ajouter aux favoris</>\r\n                         }\r\n                    </a>\r\n                    <Link to={`/onzer/song/${music.id}`} className=\"float-right mt-2\">\r\n                         <i className=\"fas fa-info-circle fa-2x\"></i>\r\n                    </Link>\r\n               </div>\r\n          </div>\r\n     );\r\n}\r\n\r\nexport default Track;","const STORAGE_FAVORITE_KEY = 'onzer.favorites'\r\n\r\nexport default {\r\n     // Retourne les favoris du localStorage du navigateur\r\n     getFavoritesFromStorage() {\r\n          return JSON.parse(window.localStorage.getItem(STORAGE_FAVORITE_KEY)) || []\r\n     },\r\n\r\n\r\n     // VÃ©rifie si une musique se trouve dans les favoris\r\n     isFavorite(music) {\r\n          return Boolean(this.getFavoritesFromStorage().find(f => f.id === music.id))\r\n     },\r\n\r\n\r\n     // Permet d'ajouter/supprimer un favori du localStorage\r\n     toggleFavorite(music) {\r\n          if (this.isFavorite(music)) {\r\n               this.removeFavoriteFromStorage(music)\r\n          } else {\r\n               this.addFavoriteToStorage(music)\r\n          }\r\n     },\r\n\r\n\r\n     // Ajoute un favori au localStorage\r\n     addFavoriteToStorage(music) {\r\n          const favorites = this.getFavoritesFromStorage()\r\n          favorites.push(music)\r\n          window.localStorage.setItem(STORAGE_FAVORITE_KEY, JSON.stringify(favorites))\r\n     },\r\n\r\n\r\n     // Supprime un favori du localStorage\r\n     removeFavoriteFromStorage(music) {\r\n          const favorites = this.getFavoritesFromStorage()\r\n          const musicIndex = favorites.findIndex(f => f.id === music.id)\r\n          favorites.splice(musicIndex, 1)\r\n          window.localStorage.setItem(STORAGE_FAVORITE_KEY, JSON.stringify(favorites))\r\n     }\r\n\r\n}\r\n","import React, { createContext, useContext, useReducer } from 'react';\r\nexport const StateContext = createContext();\r\nexport const StateProvider = ({ reducer, initialState, children }) => (\r\n     <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n          {children}\r\n     </StateContext.Provider>\r\n);\r\nexport const useStateValue = () => useContext(StateContext);","import React, { useState, useEffect, createRef } from 'react';\r\nimport fetchJsonp from 'fetch-jsonp';\r\nimport Track from './Track';\r\nimport FavService from '../FavService';\r\nimport { useStateValue, StateProvider } from '../state';\r\n\r\n\r\nfunction Home(props) {\r\n\r\n     const [store, dispatch] = useStateValue();\r\n     // const [title, setTitle] = useState('');\r\n     // const [orderBy, setOrderBy] = useState('RANKING');\r\n     // const [musics, setMusics] = useState([]);\r\n\r\n     const inputTitle = createRef()\r\n     const selectOrder = createRef()\r\n\r\n     useEffect(() => {\r\n          inputTitle.current.value = store.title\r\n          // selectOrder.current.value = store.order\r\n     })\r\n\r\n     function newTitle(event) {\r\n          // setTitle(event.target.value)\r\n          dispatch({\r\n               type: 'onTitle',\r\n               newTitle: event.target.value\r\n          })\r\n     }\r\n\r\n     function newOrder(event) {\r\n          dispatch({\r\n               type: 'onOrder',\r\n               newOrder: event.target.value\r\n          })\r\n     }\r\n\r\n     function onSearch(event) {\r\n          event.preventDefault()\r\n          const encodedTitle = encodeURIComponent(store.title);\r\n          if (store.title.trim().length > 0) {\r\n               fetchJsonp(`https://api.deezer.com/search?q=${encodedTitle}&order=${store.order}&output=jsonp`)\r\n                    .then((response) => response.json())\r\n                    .then(response => response.data)\r\n                    .then(musics => dispatch({ type: 'onMusics', newMusics: musics }))\r\n                    .catch((ex) => console.log('parsing failed', ex))\r\n          }\r\n     }\r\n\r\n     function onFavorites(music) {\r\n          FavService.toggleFavorite(music);\r\n          dispatch({\r\n               type: 'onMusics',\r\n               newMusics: [...store.musics]\r\n          })\r\n     }\r\n\r\n\r\n     return (\r\n          <main className=\"container mt-3\">\r\n               <h1>Recherche</h1>\r\n               <p>Recherchez un titre sur Deezer en utilisant le formulaire suivant :</p>\r\n               <hr />\r\n               <form onSubmit={onSearch}>\r\n                    <div className=\"row\">\r\n                         <label htmlFor=\"searchText\" className=\"col-sm-2 col-form-label text-right\">Titre&nbsp;:</label>\r\n                         <div className=\"col-sm-4\">\r\n                              <input type=\"text\" className=\"form-control\" id=\"searchText\" ref={inputTitle}\r\n                                   placeholder=\"Eminem, Armin Van Buuren, Rihanna, ...\" onChange={newTitle} />\r\n                         </div>\r\n                         <label htmlFor=\"searchText\" className=\"col-sm-2 col-form-label text-right\">Trier par :</label>\r\n                         <div className=\"col-sm-2\">\r\n                              <select id=\"order\" className=\"custom-select\" onChange={newOrder} ref={selectOrder} defaultValue=\"RANKING\">\r\n                                   <option value=\"ALBUM_ASC\">Album</option>\r\n                                   <option value=\"ARTIST_ASC\">Artiste</option>\r\n                                   <option value=\"TRACK_ASC\">Musique</option>\r\n                                   <option value=\"RANKING\">Les plus populaires</option>\r\n                                   <option value=\"RATING_ASC\">Les mieux notÃ©s</option>\r\n                              </select>\r\n                         </div>\r\n                         <div className=\"col-sm-2 text-right\">\r\n                              <input type=\"submit\" className=\"btn btn-primary\" value=\"Go\" />\r\n                         </div>\r\n                    </div>\r\n               </form>\r\n               <hr />\r\n               {/* <h3>Aucun rÃ©sultat pour cette recherche ...</h3> */}\r\n               <h2>RÃ©sultats</h2>\r\n               <div className=\"card-group search-results\">\r\n                    {store.musics.map(music => <Track key={music.id} music={music} onClick={onFavorites} isFavorite={FavService.isFavorite(music)} />)}\r\n               </div>\r\n\r\n          </main>\r\n     );\r\n}\r\n\r\nexport default Home;","import React, { useState } from 'react';\r\nimport FavService from '../FavService';\r\nimport Track from './Track';\r\n\r\nfunction Favorites(props) {\r\n\r\n     const [musics, setMusics] = useState(FavService.getFavoritesFromStorage());\r\n\r\n     function onFavorites(music) {\r\n          FavService.toggleFavorite(music);\r\n          setMusics(FavService.getFavoritesFromStorage());\r\n     }\r\n\r\n\r\n     return (\r\n          <main className=\"container mt-3\">\r\n               <h1>Mes favoris</h1>\r\n               <p>Liste de mes titres favoris</p>\r\n               <hr />\r\n\r\n               <div className=\"card-group search-results\">\r\n                    {musics.map(music => (\r\n                         <Track\r\n                              key={music.id}\r\n                              music={music}\r\n                              onClick={onFavorites}\r\n                              isFavorite={FavService.isFavorite(music)}\r\n                         />\r\n                    ))}\r\n               </div>\r\n          </main>\r\n\r\n     );\r\n}\r\n\r\nexport default Favorites;","import React from 'react';\r\n\r\nfunction NotFound(props) {\r\n     return (\r\n          <div className=\"container\">\r\n               <h1 className=\"mt-5\">404 Not Found</h1>\r\n          </div>\r\n     );\r\n}\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, Link, useParams } from \"react-router-dom\";\r\n\r\nfunction Song(props) {\r\n\r\n     let { id } = useParams(Number());\r\n\r\n     if (isNaN(id)) {\r\n          window.location.href = '/onzer'\r\n     } else {\r\n          \r\n          return (\r\n               <main className=\"container mt-3\">\r\n                    <div>\r\n                         {id}\r\n                    </div>\r\n               </main>\r\n          );\r\n     };\r\n\r\n}\r\n\r\nexport default Song;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Home from './components/Home';\nimport Favorites from './components/Favorites';\nimport NotFound from './components/NotFound';\nimport Song from './components/Song';\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\nimport { StateProvider } from './state';\n\nfunction App() {\n\n  const initialState = {\n    title: \"\",\n    order: \"\",\n    musics: []\n  };\n\n  const reducer = (state, action) => {\n    switch (action.type) {\n      case 'onTitle':\n        return {\n          ...state,\n          title: action.newTitle\n        };\n      case 'onOrder':\n        return {\n          ...state,\n          order: action.newOrder\n        };\n      case 'onMusics':\n        return {\n          ...state,\n          musics: action.newMusics\n        };\n\n      default:\n        return state;\n    }\n  };\n\n  return (\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <Router>\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark sticky-top\">\n          <div className=\"container\">\n            <Link to=\"/onzer\" className=\"navbar-brand mb-0 h1\">\n              <img src={logo} alt=\"React Logo\" width=\"42\" /> Onzer\n            </Link>\n            <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n              <ul className=\"navbar-nav\">\n                <li className=\"nav-item active\">\n                  <Link to=\"/onzer\" className=\"nav-link\">\n                    <i className=\"fas fa-search\"></i> Rechercher un titre\n                  </Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link to=\"/onzer/favorites\" className=\"nav-link\">\n                    <i className=\"fas fa-heartbeat\"></i> Mes favoris\n                  </Link>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </nav>\n        <Switch>\n          <Route\n            path='/onzer' exact render={() => <Home />}\n          />\n          <Route path=\"/onzer/favorites\" component={Favorites} />\n          <Route path=\"/onzer/song/:id\" component={Song} />\n          <Route component={NotFound} />\n        </Switch>\n      </Router>\n    </StateProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}